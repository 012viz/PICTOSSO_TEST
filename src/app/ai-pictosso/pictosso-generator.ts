/**
 * AI Pictosso Generator
 * Uses AI to generate Pictosso configurations from natural language
 */

import { OpenRouterClient, OpenRouterMessage } from './openrouter';
import { PeriodType } from '@/types';

export interface GeneratedPictosso {
    title: string;
    subtitle?: string;
    startDate: string;
    endDate: string;
    periodType: PeriodType;
    mainIcon: {
        path: string;
        name: string;
    };
    events: {
        date: string;
        title: string;
        emoji: string;
        iconifyId: string;
    }[];
}

export class PictossoGenerator {
    private client: OpenRouterClient;

    constructor(apiKey: string) {
        this.client = new OpenRouterClient(apiKey);
    }

    /**
     * Generate a Pictosso configuration from a user prompt
     */
    async generate(prompt: string): Promise<GeneratedPictosso> {
        const systemPrompt = `Tu es un assistant sp√©cialis√© dans la cr√©ation de "Pictosso" - des frises chronologiques visuelles repr√©sentant la vie ou la carri√®re de personnes c√©l√®bres.

IMPORTANT: Pictosso utilise une collection d'ic√¥nes artistiques locales. Voici les 22 ic√¥nes disponibles et leur usage :

1. Love & Life - Amour, romance, passion, relations
2. Adventure - Voyages, explorations, d√©couvertes
3. Birth - Naissances, nouveaux-n√©s
4. Car - Voitures, v√©hicules, achats automobiles
5. Financial milestone - Succ√®s financiers, investissements, richesse
6. Studies & Graduation - Dipl√¥mes, √©tudes, universit√©
7. Holidays - Vacances, d√©tente, plage
8. New Home - D√©m√©nagement, nouvelle maison/appartement
9. First Kiss - Premier baiser, romance
10. Meeting someone - Rencontres importantes, nouvelles personnes
11. Musical - Musique, concerts, albums, chansons
12. New business - Entreprises, startups, fondations
13. Promotion & New Job - Carri√®re, promotions, nouveaux emplois
14. Personal achievement - R√©ussites personnelles, accomplissements
15. Pet - Animaux de compagnie (chiens, chats)
16. Retirement - Retraite
17. Significant event - √âv√©nements majeurs importants
18. Spiritual event - Religion, foi, spiritualit√©
19. Sport event - Sports, victoires, comp√©titions
20. Wedding - Mariages, unions
21. Adventure - Aventures, explorations
22. Holidays - Vacances, repos

Ton r√¥le est de :
1. Identifier la personne ou le sujet mentionn√©
2. Rechercher les √©v√©nements cl√©s de sa vie/carri√®re (dates importantes)
3. Mapper chaque √©v√©nement √† l'ic√¥ne Pictosso la plus appropri√©e
4. Choisir une ic√¥ne principale repr√©sentative de la personne
5. D√©terminer les dates de d√©but et fin appropri√©es
6. Choisir le type de p√©riode (DAY, MONTH, YEAR)

Format de r√©ponse OBLIGATOIRE (JSON strict) :
{
  "title": "Nom de la personne",
  "subtitle": "Description courte (ex: Musicien jama√Øcain)",
  "startDate": "YYYY-MM-DD",
  "endDate": "YYYY-MM-DD",
  "periodType": "DAY" | "MONTH" | "YEAR",
  "mainIcon": {
    "path": "any-emoji-for-display",
    "name": "Nom descriptif court (musical, love, sport, etc.)"
  },
  "events": [
    {
      "date": "YYYY-MM-DD",
      "title": "Description de l'√©v√©nement (ex: 'Premier album', 'Rencontre avec sa femme')",
      "emoji": "üéµ",
      "iconifyId": "placeholder-only-for-display"
    }
  ]
}

R√®gles importantes :
- S√©lectionne 15-30 √©v√©nements cl√©s espac√©s dans le temps
- Pour chaque √©v√©nement, le "title" doit contenir des mots-cl√©s qui permettront de mapper vers nos ic√¥nes locales
  * Utilise "birth", "born", "naissance" pour ic√¥ne Birth
  * Utilise "wedding", "marriage", "mariage" pour ic√¥ne Wedding  
  * Utilise "album", "concert", "music", "song" pour ic√¥ne Musical
  * Utilise "graduated", "university", "degree" pour ic√¥ne Graduation
  * Etc. (sois explicite dans les titres)
- Choisis le periodType en fonction de la dur√©e totale :
  * DAY : pour moins de 3 mois
  * MONTH : pour 3 mois √† 10 ans
  * YEAR : pour plus de 10 ans
- Assure-toi que les dates sont chronologiques
- mainIcon.name doit √™tre un mot simple qui aide au mapping (ex: "musical" pour chanteur, "sport" pour athl√®te, "love" pour relation)

R√©ponds UNIQUEMENT avec le JSON, sans texte avant ou apr√®s.`;

        const messages: OpenRouterMessage[] = [
            { role: 'system', content: systemPrompt },
            { role: 'user', content: prompt }
        ];

        const response = await this.client.chat(messages, 'anthropic/claude-3.5-sonnet', 0.7);
        
        // Parse the JSON response
        try {
            // Extract JSON from markdown code blocks if present
            let jsonStr = response.trim();
            const jsonMatch = jsonStr.match(/```(?:json)?\s*(\{[\s\S]*\})\s*```/);
            if (jsonMatch) {
                jsonStr = jsonMatch[1];
            }
            
            const result = JSON.parse(jsonStr) as GeneratedPictosso;
            
            // Validate the structure
            if (!result.title || !result.startDate || !result.endDate || !result.mainIcon || !result.events) {
                throw new Error('Invalid response structure from AI');
            }
            
            return result;
        } catch (error) {
            console.error('Failed to parse AI response:', response);
            throw new Error(`Failed to parse AI response: ${error}`);
        }
    }

    /**
     * Search for specific information about a person/topic
     */
    async search(query: string): Promise<string> {
        const messages: OpenRouterMessage[] = [
            {
                role: 'system',
                content: 'Tu es un assistant de recherche. Fournis des informations factuelles et chronologiques sur le sujet demand√©.'
            },
            {
                role: 'user',
                content: query
            }
        ];

        return await this.client.chat(messages, 'anthropic/claude-3.5-sonnet', 0.3);
    }
}
